<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>Database integration</title>
  <meta http-equiv="Content-Style-Type" content="text/css"/>
  <link rel="STYLESHEET" type="text/css" href="LavaStyles.css" />
  <style type="text/css" xml:space="preserve">
/*<![CDATA[*/
  p.c5 {font-weight: bold}
  i.c4 {font-weight: bold}
  p.c3 {text-align: left}
  b.c2 {font-style: italic}
  h2.c1 {text-align: center}
  /*]]>*/
      .style1
      {
          color: #FF0000;
          font-style: italic;
      }
      .style2
      {
          color: #0000FF;
      }
      .style3
      {
          color: #0000FF;
          font-weight: bold;
      }
      .style4
      {
          color: #FF0000;
      }
  </style>
</head>

<body>
  <h2 class="c1"><strong>Integrated database expressive means</strong></h2>

  <p class="c3">It is one of the most important features of <span class="style1"><strong>Lava</strong></span> that it neither needs <strong>&quot;embedded 
      <span class="style1">SQL</span>&quot;</strong> nor any other <em>special</em> expressive means for database or <a href="Transactions.htm">transaction</a> management. 
      <span class="style1"><strong>Lava</strong></span> is based on (bounded) quantifier logic and provides finite sets of objects, quantifiers 
      <span class="style2"> <strong>exists</strong></span>, <span class="style2"> <strong>foreach</strong></span>, logical conjunctions 
      <span class="style2"> <strong>and</strong></span>, <span class="style2"> <strong>or</strong></span>, 
      <span class="style2"> <strong>not</strong></span>, <span class="style3">xor</span>, 
      <span class="style2"> <strong>if</strong>-<strong>then</strong>-<strong>else</strong></span>, and a set construction expression 
      <span class="style2"> <strong>select</strong></span>, that roughly corresponds to the 
      <span class="style4"> <strong class="c2">SQL</strong></span> &quot;select&quot; expression. These can be used to express object and set queries and data manipulation algorithms, and these expressive means are independent of the persistent or transient nature of the underlying data.</p>

  <p class="c3">The <strong>where</strong> clause of the quantifiers and the 
      <span class="style3">select</span> expression corresponds roughly to the &quot;where&quot; clause of the 
      <span class="style4"> <em class="c4">SQL</em></span> &quot;select&quot; construct. We shall need further clauses corresponding to the various clauses of &quot;select&quot; in 
      <span class="style4"> <strong class="c2">SQL</strong></span> (for further study).</p>

  <p>A database, including external <span class="style4"> <strong class="c2">SQL</strong></span> or object-oriented databases, appears in 
      <span class="style1"><strong>Lava</strong></span> as a special (persistent) <a href="Components.htm">component object</a>. The <strong><a href="Components.htm#attach">attach</a></strong> construct is used to &quot;open&quot; it, which means to make it accessible through a specific interface. Subsequently the database may be used in the same way as any other 
      <span class="style4"> <strong class="c2">Lava</strong></span> object.</p>

  <p><strong>See also</strong></p>

  <p class="c5"><a href="Transactions.htm"><em>Lava</em> transaction management</a></p>

  <p class="c5"><a href="DatabaseSample.htm">Database sample</a></p>
</body>
</html>
