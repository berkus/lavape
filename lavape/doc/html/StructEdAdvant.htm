<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>Advantages of Lava structure editing</title>
  <meta http-equiv="Content-Style-Type" content="text/css"/>
  <link rel="STYLESHEET" type="text/css" href="LavaStyles.css" />
  <style type="text/css" xml:space="preserve">
/*<![CDATA[*/
  a.c5 {font-weight: bold}
  p.c4 {font-weight: bold}
  i.c3 {font-weight: bold; color: Red}
  b.c2 {font-style: italic; color: Red}
  h2.c1 {text-align: center}
  /*]]>*/
      .style1
      {
          color: #FF0000;
          font-style: italic;
      }
      .style2
      {
          color: #FF0000;
          font-style: italic;
          font-weight: bold;
      }
  </style>
</head>

<body>
  <h2 class="c1">Advantages of <span class="style1">Lava</span> structure editing</h2>

  <ul>
    <li><strong>No syntax-learning:</strong> You need not learn and meticulously observe the <b class="c2">Lava</strong> syntax; <em class="c3">Lava</em> does not even <em>have</em> a fixed textual syntax.</li>

    <li><strong>Minimum text-entry:</strong> You need not textually enter individual keywords, operators, separators, variable/function/type references in 
        <span class="style2">LavaPE</span> but only comments, constants and new identifiers.</li>

    <li><strong>Drag-and-Drop/Cut-Copy-Paste of syntactic units only:</strong> You can only select complete syntactic units in the <em class="c3">Lava</em> structure editors; Drag-and-Drop/Cut-Copy-Paste copy/move such units only to places where they are acceptable, and an <strong>automatic maintenance of existing references</strong> is performed subsequently.</li>

    <li><strong>No syntactic errors:</strong> Many clerical errors, like unbalanced parentheses, misspelled keywords or other context-free syntax errors are impossible with structure editing.</li>

    <li><strong>Early error reporting:</strong> Context-related errors are reported at the earliest possible moment, i.e., immediately after the edit operation that caused the error.</li>

    <li>Variable/function/type <strong>references need not be keyed in</strong> but you select them from specific combo boxes.</li>

    <li>These combo boxes list <strong>only references that are permissible</strong> at the current selection. E.g., if you are about to insert a variable as an actual input or output parameter of a function call then only variables that are compatible with the type of the corresponding formal parameter are listed in the &quot;objects combo box&quot;. Only more complex, context-dependent potential errors would remain owing to this &quot;preselection&quot; of insertable references.</li>

    <li><strong>Automatic maintenance of references:</strong> If you rename a <span class="style2">Lava</span> entity or move it (via drag-and-drop in the declaration view) to another place then all references in the declaration view and in all execs are changed automatically. Cumbersome string replacement procedures are not required to this end.</li>

    <li><strong>Automatic maintenance of actual parameter lists:</strong> If you add, remove, or permute parameters of a function in the declaration view then all required modifications in all execs that are affected by that change are performed automatically, at the latest when you re-open the affected exec if it was closed at the time of the change.</li>

    <li><strong>Automatic maintenance of implementations, derived classes and packages</strong> when classes or base classes/packages are changed.</li>
  </ul>

  <p class="c4">See also:</p>

  <p><a class="c5" href="BasicEditing.htm">Basic program editing</a> procedures in Lava.</p>

  <p><a class="c5" href="PointAndClick.htm">Point-and-click nature</a> of <b class="c2">LavaPE</strong>.</p>

  <p><a class="c5" href="LavaReadability.htm">Improved readability</a> of <b class="c2">Lava</strong> programs.</p>
</body>
</html>
