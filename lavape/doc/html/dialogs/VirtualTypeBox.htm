<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>Virtual type property sheet</title>
  <link rel="STYLESHEET" type="text/css" href="../LavaStyles.css" />
  <style type="text/css" xml:space="preserve">
/*<![CDATA[*/
  h2.c1 {text-align: center}
  /*]]>*/
  </style>
</head>

<body>
  <h2 class="c1">Virtual type property sheet</h2>

  <h3>Name</h3>

  <p>The name of a virtual type (or &quot;<a href="../PatternsFrameworks.htm">pattern</a> parameter&quot;) may contain only letters, digits, and &quot;_&quot;. The first character must not be a digit.</p>

  <h3>Enable renaming</h3>

  <p>You may change the names of functions, member variables and virtual types when you override them in a derived class or pattern (for instance in order to resolve name collisions in cases of multiple inheritance). They inherit the names of the base versions by default (and their name is changed accordingly if the inherited base name is changed). Check this check-box if you would like to assign a different name (which will not be changed then if the base name is changed).</p>

  <h3>Select value type of VT</h3>

  <p>If a virtual type is not abstract then you must specify an existing type as its value. This may be a concrete type or may again be virtual and may be selected from the combo-boxes &quot;Basic classes&quot; and &quot;Other classes&quot;. &quot;Basic classes&quot; lists all interfaces whose declaration is contained in the basic include file <i>std.lava</i>.</p>
  <hr />

  <h3>Remove overrides</h3>

  <p>Transforms an <a href="../OverrideView.htm">overridden</a> virtual type into a non-overridden virtual type, as if it had been newly declared in the containing pattern.</p>

  <h3>Abstract</h3>

  <p>A virtual type (pattern parameter) of a package or of a <a href="InterfaceBox.htm#creatable">non-creatable</a> class may be abstract. I.e., the specification of a value type for this pattern parameter is deferred to a derived pattern.</p>

  <h3>Kind of element reference</h3>

  <p>If this VT defines the type of the elements of a set, chain, or array then you may specify whether the elements are treated as <a href="../PointersRefCounts.htm#refTypes">constituents, acquaintances or reverse links</a>.</p>
</body>
</html>
