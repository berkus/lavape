<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>Type casts</title>
  <meta http-equiv="Content-Style-Type" content="text/css"/>
  <link rel="STYLESHEET" type="text/css" href="LavaStyles.css" />
  <style type="text/css" xml:space="preserve">
/*<![CDATA[*/
  p.c3 {font-weight: bold; text-align: left}
  b.c2 {font-style: italic; color: Red}
  p.c1 {font-weight: bold}
  /*]]>*/
  </style>
</head>

<body>
  <h2>Patterns with virtual types as a means to avoid &quot;type casts&quot;</h2>

  <p class="c1"><a href="Unsolved.htm#typeCasts">Problem statement</a></p>

  <p>The reason for the necessity of type casts in languages like <b class="c2">C++</b> or <b class="c2">Java</b> is</p>

  <ol>
    <li>that you cannot replace the types of all kinds of variables (local variables, member variables, function parameters) with more derived types on class derivation and</li>

    <li>that you cannot consistently specialize entire groups of interdependent classes.</li>
  </ol>

  <p>(<b class="c2">Eiffel</b> supports redefinitions of the first category but either requires very complicated and expensive &quot;system-level type checks&quot; at compile time or must rely on run time type checks.)</p>

  <p>The <b><a href="PatternsFrameworks.htm">pattern / virtual type</a></b> concept of <b class="c2">Lava</b> with its modified, VT-related type conformance checks fulfills both requirements and provides a type-safe and consistent way of specializing entire groups of interdependent classes. It particularly enables specialization of local variables, member variables, and function parameters without requiring the exhaustive system-level type checks of <b class="c2">Eiffel</b> and without having to rely on run time type checks to this end.</p>

  <p class="c3"><a href="PatternSamples.htm">Pattern samples</a></p>
</body>
</html>
